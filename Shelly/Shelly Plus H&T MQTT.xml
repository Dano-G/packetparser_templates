<?xml version="1.0" encoding="utf-8"?>
<Templates format="2" protocolVersion="72">
  <Template revision="1.0" id = "0973541b-0806-4d0a-8798-c8afeffd56f2">
    <SuggestedCCUParameters />
    <RevisionHistory>
      <Revision id="1.0">Initial version</Revision>
    </RevisionHistory>
    <Name>Shelly Plus H&amp;T MQTT</Name>
    <CcuModel>PacketParserCCU</CcuModel>
    <Producer></Producer>
    <Model></Model>
    <Description></Description>
	<ImportParameters>
	<Parameter>
		<Name>Mqtt Broker ${ipAddress}</Name>	
		<Value>192.168.0.1</Value>
		<Id>IpAddress</Id>
	</Parameter>
	<Parameter>
		<Name>Mqtt Broker port</Name>	
		<Value>1883</Value>
		<Id>Port</Id>
	</Parameter>
  <Parameter>
	<Name>Device ID</Name>	
	<Value>shellyplusht-yourDeviceId</Value>
	<Id>deviceId</Id>
  </Parameter>
	</ImportParameters>
    <Module>
      <Name>Shelly Plus H&amp;T MQTT</Name>
      <Model>PacketParserModuleMqtt</Model>
      <DeviceProperties>
        <InternalPollInterval>15000</InternalPollInterval>
        <CustomVariables>[{"Name":"deviceId","ValueTypeId":2,"NumericValue":0,"StringValue":"$[deviceId]"}]</CustomVariables>
        <IpAddress>$[IpAddress]</IpAddress>
		<Port>$[Port]</Port>
        <RootTopic>$[deviceId]/#</RootTopic>
      </DeviceProperties>
      <Devices>
        <Device>
          <Name>Shelly Plus H&amp;T</Name>
          <Model>PacketParserTemperatureSensor</Model>
          <DeviceProperties>
            <ReadScriptPacketParser></ReadScriptPacketParser>
            <InternalPollInterval>10000</InternalPollInterval>
			<CustomVariables>[{"Name":"listenHum","ValueTypeId":1,"NumericValue":"NaN"},{"Name":"batteryPerc","ValueTypeId":1,"NumericValue":"NaN"},{"Name":"batteryV","ValueTypeId":1,"NumericValue":"NaN"},{"Name":"externalPower","ValueTypeId":2,"NumericValue":"NaN","StringValue":""},{"Name":"macAddress","ValueTypeId":2,"NumericValue":0,"StringValue":""},{"Name":"cloudConnected","ValueTypeId":2,"NumericValue":0,"StringValue":""},{"Name":"mqttConnected","ValueTypeId":2,"NumericValue":0,"StringValue":""},{"Name":"BLEenabled","ValueTypeId":2,"NumericValue":0,"StringValue":""},{"Name":"wifi","ValueTypeId":2,"NumericValue":0,"StringValue":""},{"Name":"ipaddress","ValueTypeId":2,"NumericValue":0,"StringValue":""}]</CustomVariables>
            <ServiceAttributesScriptsPacketParser>[{"AttributeDefinition":{"Name":"Battery"},"ReadFormula":"IF (ISNAN(batteryPerc), \u0022-\u0022, batteryPerc \u002B \u0022%\u0022);"},{"AttributeDefinition":{"Name":"Battery voltage"},"ReadFormula":"IF (ISNAN(batteryV), \u0022-\u0022, batteryV \u002B \u0022V\u0022);"},{"AttributeDefinition":{"Name":"External power"},"ReadFormula":"IF (LENGTH(externalPower) = 0, \u0022-\u0022, externalPower);"},{"AttributeDefinition":{"Name":"WiFi"},"ReadFormula":"IF (LENGTH(wifi) = 0, \u0022-\u0022, wifi);"},{"AttributeDefinition":{"Name":"IP Address"},"ReadFormula":"IF (LENGTH(ipaddress) = 0, \u0022-\u0022, ipaddress);"},{"AttributeDefinition":{"Name":"MAC Address"},"ReadFormula":"IF (LENGTH(macAddress) = 0, \u0022-\u0022, macAddress);"},{"AttributeDefinition":{"Name":"Cloud connected"},"ReadFormula":"IF (LENGTH(cloudConnected) = 0, \u0022-\u0022, cloudConnected);"},{"AttributeDefinition":{"Name":"MQTT connected"},"ReadFormula":"IF (LENGTH(mqttConnected) = 0, \u0022-\u0022, mqttConnected);"},{"AttributeDefinition":{"Name":"BLE enabled"},"ReadFormula":"IF (LENGTH(BLEenabled) = 0, \u0022-\u0022, BLEenabled);"}]</ServiceAttributesScriptsPacketParser>
            <ServiceActionsScriptsPacketParser></ServiceActionsScriptsPacketParser>
            <ListenerScriptPacketParser>VAR command := tostring(RECEIVEDBYTES);
VAR topic := parsejson(command, "Topic");

IF (INDEXOF(topic, deviceid +"/status/temperature:0") &gt;= 0)
    VAR payloadTemp := PARSEJSON(command, "Payload");
    Te := PARSEJSON(payloadTemp,"tC", true);
ELSEIF (INDEXOF(topic, deviceid +"/status/humidity:0") &gt;= 0)
    VAR payloadHum := PARSEJSON(command, "Payload");
    listenHum := PARSEJSON(payloadHum,"rh", true);
ELSEIF (INDEXOF(topic, deviceid +"/status/devicepower:0") &gt;= 0)
    VAR payloadPow := PARSEJSON(command, "Payload");
    batteryPerc := PARSEJSON(payloadPow,"battery.percent", true);
    batteryV := PARSEJSON(payloadPow,"battery.V", true);
    externalPower := PARSEJSON(payloadPow,"external.present", true);
ELSEIF (INDEXOF(topic, deviceid +"/status/sys") &gt;= 0)
    VAR payloadSys := PARSEJSON(command, "Payload");
    macAddress := PARSEJSON(payloadSys,"mac", true);
ELSEIF (INDEXOF(topic, deviceid +"/status/wifi") &gt;= 0)
    VAR payloadWifi := PARSEJSON(command, "Payload");
    ipaddress := PARSEJSON(payloadWifi,"sta_ip", true);
    wifi := PARSEJSON(payloadWifi,"ssid", true);
ELSEIF (INDEXOF(topic, deviceid +"/status/cloud") &gt;= 0)
    VAR payloadCloud := PARSEJSON(command, "Payload");
    cloudConnected := PARSEJSON(payloadCloud,"connected", true);
ELSEIF (INDEXOF(topic, deviceid +"/status/mqtt") &gt;= 0)
    VAR payloadMqtt := PARSEJSON(command, "Payload");
    mqttConnected := PARSEJSON(payloadMqtt,"connected", true);
ELSEIF (INDEXOF(topic, deviceid +"/status/ble") &gt;= 0)
    VAR payloadBLE := PARSEJSON(command, "Payload");
    BLEenabled := PARSEJSON(payloadBLE,"enable", true);
END</ListenerScriptPacketParser>
            <TemperatureCalibration>0</TemperatureCalibration>
            <ReadTemperatureScriptPacketParser></ReadTemperatureScriptPacketParser>
            <ReadHumidityScriptPacketParser>Hu := listenHum / 100.0;</ReadHumidityScriptPacketParser>
          </DeviceProperties>
        </Device>
      </Devices>
    </Module>
  </Template>
</Templates>